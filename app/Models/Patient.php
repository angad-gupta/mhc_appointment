<?php

namespace App\Models;

use Carbon\Carbon;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;

class Patient extends Model
{


    protected $fillable = [
        'title', 'full_name', 'phone', 'contact_email', 'date_of_birth',
        'sex', 'occupation', 'height', 'weight', 'cell_phone',
        'home_phone', 'country', 'city', 'address','photo','user_id'
    ];

    protected $appends = [
        'age','encrypted_id'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function ($model) {
            $model->created_by = auth()->check() ? auth()->user()->id : 0;
        });
    }

    public function getAgeAttribute()
    {
        return Carbon::parse($this->date_of_birth)->diff(Carbon::now())->format('%y Years, %m Months and %d days');
    }

    public function getEncryptedIdAttribute()
    {
        return encrypt($this->id);
    }

    // public function user()
    // {
    //     return $this->belongsTo(User::class, 'user_id');
    // }

    public function patientDoctors()
    {
        return $this->hasMany(DoctorsPatients::class)->with('doctor');
    }

    public function payments()
    {
        return $this->hasMany(PatientPayment::class);
    }

    public function appointments()
    {
        return $this->hasMany(Appointment::class)->orderBy('id', 'desc');
    }

    public function prescriptions()
    {
        return $this->hasMany(Prescription::class);
    }

    public function medicalDocuments()
    {
        return $this->hasMany(PatientMedicalDocument::class);
    }

    public function medicalNotes()
    {
        return $this->hasMany(PatientMedicalNote::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

}
